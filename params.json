{
  "name": "Miniature-goggles",
  "tagline": "A process analysis tool for Linux",
  "body": "# goggles(1) -- a process analysis tool for bash\r\n\r\n## SYNOPSIS\r\n\r\n`goggles` [-hs] [-f <ps format>] [-o <outfile>] [-i <interval>] [-c <command> | <command>]\r\n\r\n## OPTIONS\r\n       -h   help        Display help.\r\n       -s   silent      Target process will not output to stdout.\r\n       -f   format      Specify ps format for goggles output.\r\n       -o   outfile     Specify output file; measurements will not be output to stdout.\r\n       -i   interval    Specify interval in seconds.\r\n       -c   command     Specify command (defaults to last arg).\r\n\r\n## DESCRIPTION\r\n\r\ngoggles(1) is a program that is used to analyze a process and output the data in a graph friendly manner.\r\n\r\ngoggles(1) fills a need left over from top(1) and ps(1) by providing repetitive updates on process information that is also suitable for review of the process or comparison to other processes.\r\n\r\nAt a set interval (default of 1 second), goggles(1) retrieves process information using the ps(1) command. goggles(1) accepts all ps(1) format descriptors including AIX format descriptors and ps(1) NORMAL format descriptors. NOTE: For processes that exit soon after starting, goggles may not be able to analyze the process due to the process ending before the first measurement can be taken.\r\n\r\nLinux pipes can be used with goggles(1) to analyze processes with input or output. Input piped into goggles(1) will be sent to the process goggles(1) is analyzing. Piping output from goggles(1) will by default send both goggles(1) measurements and the process output through the pipe. The process output can be silenced using the `-s` option, which is useful for measuring commands quickly in the terminal. The measurement data from goggles(1) can be redirected to an outfile using the `-o` option.\r\n\r\n## EXAMPLES\r\n\r\nTo analyze a process; only displaying goggle measurement output:\r\n\r\n`goggles -s <command>`\r\n\r\nTo analyze a process's per-milla cpu usage (tenths of a percent), virtual memory size, and elapse time:\r\n\r\n`goggles -sf cp,vsz,etime <command>`\r\n\r\nTo analyze a process with piped input; only displaying goggle measurement output:\r\n\r\n`<command> | goggles -s <command>`\r\n\r\nTo analyze a process with piped output; output measurements to a file:\r\n\r\n`goggles -o <outfile> <command> | <command>`\r\n\r\nTo analyze a process with piped input and piped output:\r\n\r\n`<command> | goggles -o <outfile> <command> | <command>`\r\n\r\n## AIX FORMAT DESCRIPTORS\r\ngoggles(1) supports all ps(1) format descriptors including AIX format descriptors:\r\n\r\n       CODE   NORMAL   HEADER\r\n       %C     pcpu     %CPU\r\n       %G     group    GROUP\r\n       %P     ppid     PPID\r\n       %U     user     USER\r\n       %a     args     COMMAND\r\n       %c     comm     COMMAND\r\n       %g     rgroup   RGROUP\r\n       %n     nice     NI\r\n       %p     pid      PID\r\n       %r     pgid     PGID\r\n       %t     etime    ELAPSED\r\n       %u     ruser    RUSER\r\n       %x     time     TIME\r\n       %y     tty      TTY\r\n       %z     vsz      VSZ\r\n\r\n## PS FORMAT DESCRIPTORS\r\n\r\nThe following descriptor table is taken from the ps(1) man page:\r\n\r\n       CODE        HEADER    DESCRIPTION\r\n\r\n       %cpu        %CPU      cpu utilization of the process in \"##.#\" format.  Currently, it is the CPU time used divided \r\n                             by the time the process has been running (cputime/realtime ratio), expressed as a percentage.\r\n                             It will not add up to 100% unless you are lucky.  (alias pcpu).\r\n\r\n       %mem        %MEM      ratio of the process's resident set size  to the physical memory on the machine, expressed\r\n                             as a percentage. (alias pmem).\r\n\r\n       args        COMMAND   command with all its arguments as a string. Modifications to the arguments may be shown.  The\r\n                             output in this column may contain spaces.  A process marked <defunct> is partly dead, waiting\r\n                             to be fully destroyed by its parent.  Sometimes the process args will be unavailable; when \r\n                             this happens, ps will instead print the executable name in brackets.  (alias cmd, command).\r\n                             See also the comm format keyword, the -f option, and the c option. When specified last, this\r\n                             column will extend to the edge of the display.  If ps can not determine display width, as when\r\n                             output is redirected (piped) into a file or another command, the output width is undefined\r\n                             (it may be 80, unlimited, determined by the TERM variable, and so on).  The COLUMNS environment\r\n                             variable or --cols option may be used to exactly determine the width in this case.  The w or\r\n                             -w option may be also be used to adjust width.\r\n\r\n       blocked     BLOCKED   mask of the blocked signals, see signal(7).  According to the width of the field, a 32 or 64-bit\r\n                             mask in hexadecimal format is displayed.  (alias sig_block, sigmask).\r\n\r\n       bsdstart    START     time the command started.  If the process was started less than 24 hours ago, the output format\r\n                             is \" HH:MM\", else it is \" Mmm:SS\" (where Mmm is the three letters of the month).  See also\r\n                             lstart, start, start_time, and stime.\r\n\r\n       bsdtime     TIME      accumulated cpu time, user + system.  The display format is usually \"MMM:SS\", but can be shifted\r\n                             to the right if the process used more than 999 minutes of cpu time.\r\n\r\n       c           C         processor utilization. Currently, this is the integer value of the percent usage over the lifetime\r\n                             of the process.  (see %cpu).\r\n\r\n       caught      CAUGHT    mask of the caught signals, see signal(7).  According to the width of the field, a 32 or 64\r\n                             bits mask in hexadecimal format is displayed.  (alias sig_catch, sigcatch).\r\n\r\n       cgroup      CGROUP    display control groups to which the process belongs.\r\n\r\n       class       CLS       scheduling class of the process.  (alias policy, cls).  Field's possible values are:\r\n\r\n                                      -   not reported\r\n                                      TS  SCHED_OTHER\r\n                                      FF  SCHED_FIFO\r\n                                      RR  SCHED_RR\r\n                                      B   SCHED_BATCH\r\n                                      ISO SCHED_ISO\r\n                                      IDL SCHED_IDLE\r\n                                      ?   unknown value\r\n\r\n       cls         CLS       scheduling class of the process.  (alias policy, cls).  Field's possible values are:\r\n\r\n                                      -   not reported\r\n                                      TS  SCHED_OTHER\r\n                                      FF  SCHED_FIFO\r\n                                      RR  SCHED_RR\r\n                                      B   SCHED_BATCH\r\n                                      ISO SCHED_ISO\r\n                                      IDL SCHED_IDLE\r\n                                      ?   unknown value\r\n\r\n       cmd         CMD       see args.  (alias args, command).\r\n\r\n       comm        COMMAND   command name (only the executable name).  Modifications to the command name will not be shown.\r\n                             A process marked <defunct> is partly dead, waiting to be fully destroyed by its parent.  The\r\n                             output in this column may contain spaces.  (alias ucmd, ucomm).  See also the args format keyword,\r\n                             the -f option, and the c option. When specified last, this column will extend to the edge of\r\n                             the display.  If ps can not determine display width, as when output is redirected (piped) into\r\n                             a file or another command, the output width is undefined (it may be 80, unlimited, determined\r\n                             by the TERM variable, and so on).  The COLUMNS environment variable or --cols option may be\r\n                             used to exactly determine the width in this case.  The w or -w option may be also be used to\r\n                             adjust width.\r\n\r\n       command     COMMAND   See args.  (alias args, command).\r\n\r\n       cp          CP        per-mill (tenths of a percent) CPU usage.  (see %cpu).\r\n\r\n       cputime     TIME      cumulative CPU time, \"[DD-]hh:mm:ss\" format.  (alias time).\r\n\r\n       egid        EGID      effective group ID number of the process as a decimal integer.  (alias gid).\r\n\r\n       egroup      EGROUP    effective group ID of the process.  This will be the textual group ID, if it can be obtained\r\n                             and the field width permits, or a decimal representation otherwise.  (alias group).\r\n\r\n       eip         EIP       instruction pointer.\r\n\r\n       esp         ESP       stack pointer.\r\n\r\n       etime       ELAPSED   elapsed time since the process was started, in the form [[DD-]hh:]mm:ss.\r\n\r\n       etimes      ELAPSED   elapsed time since the process was started, in seconds.\r\n\r\n       euid        EUID      effective user ID (alias uid).\r\n\r\n       euser       EUSER     effective user name.  This will be the textual user ID, if it can be obtained and the field\r\n                             width permits, or a decimal representation otherwise.  The n option can be used to force the\r\n                             decimal representation.  (alias uname, user).\r\n\r\n       f           F         flags associated with the process, see the PROCESS FLAGS section.  (alias flag, flags).\r\n\r\n       fgid        FGID      filesystem access group ID.  (alias fsgid).\r\n\r\n       fgroup      FGROUP    filesystem access group ID.  This will be the textual group ID, if it can be obtained and the\r\n                             field width permits, or a decimal representation otherwise.  (alias fsgroup).\r\n\r\n       flag        F         see f.  (alias f, flags).\r\n\r\n       flags       F         see f.  (alias f, flag).\r\n\r\n       fname       COMMAND   first 8 bytes of the base name of the process's executable file.  The output in this column\r\n                             may contain spaces.\r\n\r\n       fuid        FUID      filesystem access user ID.  (alias fsuid).\r\n\r\n       fuser       FUSER     filesystem access user ID.  This will be the textual user ID, if it can be obtained and the\r\n                             field width permits, or a decimal representation otherwise.\r\n\r\n       gid         GID       see egid.  (alias egid).\r\n\r\n       group       GROUP     see egroup.  (alias egroup).\r\n\r\n       ignored     IGNORED   mask of the ignored signals, see signal(7).  According to the width of the field, a 32 or 64\r\n                             bits mask in hexadecimal format is displayed.  (alias sig_ignore, sigignore).\r\n\r\n       ipcns       IPCNS     Unique inode number describing the namespace the process belongs to. See namespaces(7).\r\n\r\n       label       LABEL     security label, most commonly used for SELinux context data.  This is for the Mandatory Access\r\n                             Control (\"MAC\") found on high-security systems.\r\n\r\n       lstart      STARTED   time the command started.  See also bsdstart, start, start_time, and stime.\r\n\r\n       lsession    SESSION   displays login session identifier of a process.\r\n\r\n       lwp         LWP       light weight process (thread) ID of the dispatchable entity (alias spid, tid).  See tid for\r\n                             additional information.\r\n\r\n       machine     MACHINE   displays machine name for processes assigned to VM or container.\r\n\r\n       maj_flt     MAJFLT    The number of major page faults that have occurred with this process.\r\n\r\n       min_flt     MINFLT    The number of minor page faults that have occurred with this process.\r\n\r\n       mntns       MNTNS     Unique inode number describing the namespace the process belongs to. See namespaces(7).\r\n\r\n       netns       NETNS     Unique inode number describing the namespace the process belongs to. See namespaces(7).\r\n\r\n       ni          NI        nice value. This ranges from 19 (nicest) to -20 (not nice to others), see nice(1).  (alias\r\n                             nice).\r\n\r\n       nice        NI        see ni.(alias ni).\r\n\r\n       nlwp        NLWP      number of lwps (threads) in the process.  (alias thcount).\r\n\r\n       nwchan      WCHAN     address of the kernel function where the process is sleeping (use wchan if you want the kernel\r\n                             function name).\r\n                             Running tasks will display a dash ('-') in this column.\r\n\r\n       ouid        OWNER     displays the Unix user identifier of the owner of the session of a process.\r\n\r\n       pcpu        %CPU      see %cpu.  (alias %cpu).\r\n\r\n       pending     PENDING   mask of the pending signals. See signal(7).  Signals pending on the process are distinct from\r\n                             signals pending on individual threads.  Use the m option or the -m option to see both.  According\r\n                             to the width of the field, a 32 or 64 bits mask in hexadecimal format is displayed.  (alias sig).\r\n\r\n       pgid        PGID      process group ID or, equivalently, the process ID of the process group leader.  (alias pgrp).\r\n\r\n       pgrp        PGRP      see pgid.  (alias pgid).\r\n\r\n       pid         PID       a number representing the process ID (alias tgid).\r\n\r\n       pidns       PIDNS     Unique inode number describing the namespace the process belongs to. See namespaces(7).\r\n\r\n       pmem        %MEM      see %mem.  (alias %mem).\r\n\r\n       policy      POL       scheduling class of the process.  (alias class, cls).  Possible values are:\r\n\r\n                                      -   not reported\r\n                                      TS  SCHED_OTHER\r\n                                      FF  SCHED_FIFO\r\n                                      RR  SCHED_RR\r\n                                      B   SCHED_BATCH\r\n                                      ISO SCHED_ISO\r\n                                      IDL SCHED_IDLE\r\n                                      ?   unknown value\r\n\r\n       ppid        PPID      parent process ID.\r\n\r\n       pri         PRI       priority of the process.  Higher number means lower priority.\r\n\r\n       psr         PSR       processor that process is currently assigned to.\r\n\r\n       rgid        RGID      real group ID.\r\n\r\n       rgroup      RGROUP    real group name.  This will be the textual group ID, if it can be obtained and the field width\r\n                             permits, or a decimal representation otherwise.\r\n\r\n       rss         RSS       resident set size, the non-swapped physical memory that a task has used (inkiloBytes).  (alias\r\n                             rssize, rsz).\r\n\r\n       rssize      RSS       see rss.  (alias rss, rsz).\r\n\r\n       rsz         RSZ       see rss.  (alias rss, rssize).\r\n\r\n       rtprio      RTPRIO    realtime priority.\r\n\r\n       ruid        RUID      real user ID.\r\n\r\n       ruser       RUSER     real user ID.  This will be the textual user ID, if it can be obtained and the field width\r\n                             permits, or a decimal representation otherwise.\r\n\r\n       s           S         minimal state display (one character).  See section PROCESS STATE CODES for the different values.\r\n                             See also stat if you want additional information displayed.  (alias state).\r\n\r\n       sched       SCH       scheduling policy of the process.  The policies SCHED_OTHER (SCHED_NORMAL), SCHED_FIFO, SCHED_RR,\r\n                             SCHED_BATCH, SCHED_ISO, and SCHED_IDLE are respectively displayed as 0, 1, 2, 3, 4, and 5.\r\n\r\n       seat        SEAT      displays login session identifier of a process.\r\n\r\n       sess        SESS      session ID or, equivalently, the process ID of the session leader.  (alias session, sid).\r\n\r\n       sgi_p       P         processor that the process is currently executing on.  Displays \"*\" if the process is not currently\r\n                             running or runnable.\r\n\r\n       sgid        SGID      saved group ID.  (alias svgid).\r\n\r\n       sgroup      SGROUP    saved group name.  This will be the textual group ID, if it can be obtained and the field width\r\n                             permits, or a decimal representation otherwise.\r\n\r\n       sid         SID       see sess.  (alias sess, session).\r\n\r\n       sig         PENDING   see pending.  (alias pending, sig_pend).\r\n\r\n       sigcatch    CAUGHT    see caught.  (alias caught, sig_catch).\r\n\r\n       sigignore   IGNORED   see ignored.  (alias ignored, sig_ignore).\r\n\r\n       sigmask     BLOCKED   see blocked.  (alias blocked, sig_block).\r\n\r\n       size        SIZE      approximate amount of swap space that would be required if the process were to dirty all writable\r\n                             pages and then be swapped out.  This number is very rough!\r\n\r\n       slice       SLICE     displays slice unit which a process belongs to.\r\n\r\n       spid        SPID      see lwp.  (alias lwp, tid).\r\n\r\n       stackp      STACKP    address of the bottom (start) of stack for the process.\r\n\r\n       start       STARTED   time the command started.  If the process was started less than 24 hours ago, the output format\r\n                             is \"HH:MM:SS\", else it is \"  Mmm dd\" (where Mmm is a three-letter month name).  See also lstart,\r\n                             bsdstart, start_time, and stime.\r\n\r\n       start_time  START     starting time or date of the process.  Only the year will be displayed if the process was not\r\n                             started the same year ps was invoked, or \"MmmDD\" if it was not started the same day, or \"HH:MM\"\r\n                             otherwise.  See also bsdstart, start, lstart, and stime.\r\n\r\n       stat        STAT      multi-character process state.  See section PROCESS STATE CODES for the different values meaning.\r\n                             See also s and state if you just want the first character displayed.\r\n\r\n       state       S         see s. (alias s).\r\n\r\n       suid        SUID      saved user ID.  (alias svuid).\r\n\r\n       supgid      SUPGID    group ids of supplementary groups, if any.  See getgroups(2).\r\n\r\n       supgrp      SUPGRP    group names of supplementary groups, if any.  See getgroups(2).\r\n\r\n       suser       SUSER     saved user name.  This will be the textual user ID, if it can be obtained and the field width\r\n                             permits, or a decimal representation otherwise.  (alias svuser).\r\n\r\n       svgid       SVGID     see sgid.  (alias sgid).\r\n\r\n       svuid       SVUID     see suid.  (alias suid).\r\n\r\n       sz          SZ        size in physical pages of the core image of the process.  This includes text, data, and stack\r\n                             space.  Device mappings are currently excluded; this is subject to change.  See vsz and rss.\r\n\r\n       tgid        TGID      a number representing the thread group to which a task belongs (alias pid).  It is the process\r\n                             ID of the thread group leader.\r\n\r\n       thcount     THCNT     see nlwp.  (alias nlwp).  number of kernel threads owned by the process.\r\n\r\n       tid         TID       the unique number representing a dispatacable entity (alias lwp, spid).  This value may also\r\n                             appear as: a process ID (pid); a process group ID (pgrp); a session ID for the session leader\r\n                             (sid); a thread group ID for the thread group leader (tgid); and a tty process group ID for\r\n                             the process group leader (tpgid).\r\n\r\n       time        TIME      cumulative CPU time, \"[DD-]HH:MM:SS\" format.  (alias cputime).\r\n\r\n       tname       TTY       controlling tty (terminal).  (alias tt, tty).\r\n\r\n       tpgid       TPGID     ID of the foreground process group on the tty (terminal) that the process is connected to,\r\n                             or -1 if the process is not connected to a tty.\r\n\r\n       tt          TT        controlling tty (terminal).  (alias tname, tty).\r\n\r\n       tty         TT        controlling tty (terminal).  (alias tname, tt).\r\n\r\n       ucmd        CMD       see comm.  (alias comm, ucomm).\r\n\r\n       ucomm       COMMAND   see comm.  (alias comm, ucmd).\r\n\r\n       uid         UID       see euid.  (alias euid).\r\n\r\n       uname       USER      see euser.  (alias euser, user).\r\n\r\n       unit        UNIT      displays systemd unit which a process belongs to.\r\n\r\n       user        USER      see euser.  (alias euser, uname).\r\n\r\n       userns      USERNS    Unique inode number describing the namespace the process belongs to. See namespaces(7).\r\n\r\n       utsns       UTSNS     Unique inode number describing the namespace the process belongs to. See namespaces(7).\r\n\r\n       uunit       UUNIT     displays systemd user unit which a process belongs to.\r\n\r\n       vsize       VSZ       see vsz.  (alias vsz).\r\n\r\n       vsz         VSZ       virtual memory size of the process in KiB (1024-byte units).  Device mappings are currently\r\n                             excluded; this is subject to change.  (alias vsize).\r\n\r\n       wchan       WCHAN     name of the kernel function in which the process is sleeping, a \"-\" if the process is running,\r\n                             or a \"*\" if the process is multi-threaded and ps is not displaying threads.\r\n\r\n\r\n## AUTHOR\r\n\r\nAaron Nies <arocnies@gmail.com>\r\n\r\n## SEE ALSO\r\n\r\nps(1)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}